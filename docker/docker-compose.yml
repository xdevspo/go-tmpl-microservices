name: go_microservice_tmpl_${ENV}

services:
  proto-init:
    image: debian:stable-slim
    volumes:
      - ../:/workspace:rw
    working_dir: /workspace
    # FIXME добавить условие, если папка src/auth-service/vendor.protogen/validate не существует
    command: >
      bash -c '
            apt-get update &&
            apt-get install -y git &&
            bash docker/init-vendor.sh'
#      bash -c '
#      if [ ! -d "src/auth-service/vendor.protogen/validate" ]; then
#        apt-get update &&
#        apt-get install -y git &&
#        mkdir -p src/auth-service/vendor.protogen/validate &&
#        git clone https://github.com/envoyproxy/protoc-gen-validate tmp_validate &&
#        cp tmp_validate/validate/*.proto src/auth-service/vendor.protogen/validate/ &&
#        rm -rf tmp_validate;
#      else
#        echo "Directory src/auth-service/vendor.protogen/validate already exists. Skipping initialization.";
#      fi'

  postgres:
    image: postgres:17.2
    container_name: postgres-${ENV}
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ${POSTGRES_VOLUME}:/var/lib/postgresql/data

  auth-service:
    build:
      context: ../
      dockerfile: docker/auth-service/Dockerfile
      args:
        ENV: ${ENV}
    container_name: auth-service
    restart: always
    depends_on:
      proto-init:
        condition: service_completed_successfully
      postgres:
        condition: service_started
    environment:
      DB_DSN: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-${ENV}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable"
      ENV: ${ENV}
    ports:
      - "50051:50051"

  org-service:
    build:
      context: ../
      dockerfile: docker/org-service/Dockerfile
      args:
        ENV: ${ENV}
    container_name: org-service
    restart: always
    depends_on:
      - postgres
      - auth-service
    environment:
      DB_DSN: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-${ENV}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable"
      ENV: ${ENV}
    ports:
      - "50052:50052"

  gateway-service:
    build:
      context: ../
      dockerfile: docker/gateway-service/Dockerfile
      args:
        ENV: ${ENV}
    container_name: gateway-service
    restart: always
    depends_on:
      - auth-service
      - org-service
    environment:
      AUTH_SERVICE_URL: "auth-service:50051"
      ORG_SERVICE_URL: "org-service:50052"
      ORDERS_SERVICE_URL: "orders-service:50053"
      ENV: ${ENV}
    ports:
      - "8080:8080"

volumes:
  pg_data_dev:
  pg_data_test:
  pg_data_prod:
